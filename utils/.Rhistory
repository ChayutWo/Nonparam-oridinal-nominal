knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(arm)
library(pROC)
library(tidyverse)
library(MASS)
library(tigerstats)
library(leaps)
library(car)
library(rms)
require(caret)
require(e1071)
library(lme4)
library(lattice)
library(broom)
library(boot)
library(ggplot2)
library(cobalt)
require(tidyverse)
require(rstanarm)
require(magrittr)
require(rstan)
require(MCMCpack)
library(abind)
library(matrixStats)
library(truncnorm)
library(mvtnorm)
library(MCMCpack)
library(mnormt)
library(coda)
load('../../Datasets/ordinalPUMS.Rdata')
n <- dim(df)[1]
# VEH: Vehicles
barplot(table(df$VEH)/n, xlab = 'level', ylab = 'pmf')
# MV: When move into house
barplot(summary(df$MV)/n, xlab = 'level', ylab = 'pmf')
# NP: Number of persons in this household
barplot(summary(df$NP)/n, xlab = 'level', ylab = 'pmf')
# RMSP: Number of rooms
barplot(summary(df$RMSP)/n, xlab = 'level', ylab = 'pmf')
# ENG: Ability to speak english
barplot(summary(df$ENG)/n, xlab = 'level', ylab = 'pmf')
# MARHT: Number of times married
barplot(summary(df$MARHT)/n, xlab = 'level', ylab = 'pmf')
# SCHL: Educational attainment
barplot(summary(df$SCHL)/n, xlab = 'level', ylab = 'pmf')
# RACNUM: Number of major race groups represented
barplot(summary(df$RACNUM)/n, xlab = 'level', ylab = 'pmf')
# AGEP: Age
barplot(summary(df$AGEP)/n,  xlab = 'level', ylab = 'pmf')
# WKL: When last worked
barplot(summary(df$WKL)/n,  xlab = 'level', ylab = 'pmf')
# PINCP: Total person's income
barplot(summary(df$PINCP)/n, xlab = 'level', ylab = 'pmf')
# DO NOT ALTER CODE IN THIS CHUNK
# The very first time you use this R markdown file, you should install each of the packages below.
# The same goes for other packages you might decide to use
# Remember that you only need to install each R package once in R (ever -- unless you change computers).
# All you need to do whenever you need to use the package again (after restarting the R session),
# is to use the library function to call the package.
# For example, type install.packages("knitr") in the console to install the knitr package.
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(arm)
library(pROC)
library(tidyverse)
library(MASS)
library(tigerstats)
library(leaps)
library(car)
library(rms)
require(caret)
require(e1071)
library(lme4)
library(lattice)
library(broom)
library(boot)
library(ggplot2)
library(cobalt)
require(tidyverse)
require(rstanarm)
require(magrittr)
require(rstan)
require(MCMCpack)
library(abind)
library(matrixStats)
library(truncnorm)
library(mvtnorm)
library(MCMCpack)
library(mnormt)
library(coda)
load('../../Datasets/ordinalPUMS.Rdata')
n <- dim(df)[1]
# VEH: Vehicles
barplot(table(df$VEH)/n, xlab = 'level', ylab = 'pmf')
# MV: When move into house
barplot(summary(df$MV)/n, xlab = 'level', ylab = 'pmf')
# NP: Number of persons in this household
barplot(summary(df$NP)/n, xlab = 'level', ylab = 'pmf')
# RMSP: Number of rooms
barplot(summary(df$RMSP)/n, xlab = 'level', ylab = 'pmf')
# ENG: Ability to speak english
barplot(summary(df$ENG)/n, xlab = 'level', ylab = 'pmf')
# MARHT: Number of times married
barplot(summary(df$MARHT)/n, xlab = 'level', ylab = 'pmf')
# SCHL: Educational attainment
barplot(summary(df$SCHL)/n, xlab = 'level', ylab = 'pmf')
# RACNUM: Number of major race groups represented
barplot(summary(df$RACNUM)/n, xlab = 'level', ylab = 'pmf')
# AGEP: Age
barplot(summary(df$AGEP)/n,  xlab = 'level', ylab = 'pmf')
# WKL: When last worked
barplot(summary(df$WKL)/n,  xlab = 'level', ylab = 'pmf')
# PINCP: Total person's income
barplot(summary(df$PINCP)/n, xlab = 'level', ylab = 'pmf')
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(readr)
library(xtable)
source("../../utils/compute_rel_MSE.R")
data_name = 'MAR_45'
n_imputations = 10
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
apply(df, MARGIN = 2, quantile , probs = c(0.7, 0.8, 0.9, 0.99, 1))
apply(df, MARGIN = 2, quantile , probs = c(0.7, 0.8, 0.9, 0.95, 0.99, 1))
apply(df, MARGIN = 2, quantile , probs = c(0.9, 0.95, 0.975, 0.99, 1))
round(apply(df, MARGIN = 2, quantile , probs = c(0.9, 0.95, 0.975, 0.99, 1)),2)
View(df)
TRUE_Q = get_true_pmf(n_way)
TRUE_Q = get_true_pmf(n_way)
TRUE_Q
apply(df, MARGIN = 2, quantile , probs = c(0.9, 0.95, 0.975, 0.99, 1))
apply(df, MARGIN = 2, quantile , probs = c(0.975, 1))
apply(df, MARGIN = 2, quantile , probs = c(0.98, 1))
apply(df, MARGIN = 2, quantile , probs = c(53/54, 1))
apply(df, MARGIN = 2, quantile , probs = c(53.01/54, 1))
apply(df, MARGIN = 2, quantile , probs = c(52.9/54, 1))
apply(df, MARGIN = 2, quantile , probs = c(52.999/54, 1))
apply(df, MARGIN = 2, quantile , probs = c(52.99/54, 1))
apply(df, MARGIN = 2, quantile , probs = c(52.9/54, 1))
apply(df, MARGIN = 2, quantile , probs = c(523/54, 1))
apply(df, MARGIN = 2, quantile , probs = c(53/54, 1))
summary = apply(df, MARGIN = 2, quantile , probs = c(0, 0.25, 0.5, 0.75, 1))
rownames(summary) <- c('Min.', '1st Qu.', 'Median', '3rd Qu.', 'Max.')
xtable(summary, caption = 'Distribution of relative MSE for different imputation methods for data with 45% values MAR (Marginal probabilities)', digits = 1)
n_way = 2
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
View(df)
apply(df, MARGIN = 2, quantile , probs = c(0.98, 1))
apply(df, MARGIN = 2, quantile , probs = c(0.95, 0.98, 1))
apply(df, MARGIN = 2, quantile , probs = c(0.9,0.95, 0.98, 1))
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(readr)
library(xtable)
source("../../utils/compute_rel_MSE.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
n_way = 2
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
apply(df, MARGIN = 2, quantile , probs = c(0.9, 0.95, 0.98, 1))
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
postscript("compare_marginal_MAR_30.eps",width = 15/4, height = 3, horizontal = FALSE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript("compare_bi_MAR_30.eps",width = 15/4, height = 3, horizontal = FALSE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
postscript('compare_marginal_MAR_30.eps', horizontal = FALSE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript('compare_bi_MAR_30.eps', horizontal = FALSE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
postscript('compare_marginal_MAR_30.eps', width = 15/4, height = 3, horizontal = FALSE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript('compare_bi_MAR_30.eps', width = 15/4, height = 15/4, horizontal = FALSE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
postscript('compare_marginal_MAR_30.eps', width = 15, height = 11.135, horizontal = FALSE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript('compare_bi_MAR_30.eps', width = 15, height = 11.135, horizontal = FALSE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
postscript('compare_marginal_MAR_30.eps', width = 15, height = 11.135, horizontal = TRUE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript('compare_bi_MAR_30.eps', width = 15, height = 11.135, horizontal = FALSE, onefile = FALSE)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/pmf_comparison_plot.R")
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
postscript('compare_marginal_MAR_30.eps', width = 15, height = 11.135, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript('compare_bi_MAR_30.eps', width = 15, height = 11.135, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
postscript('compare_marginal_MAR_30.eps', width = 15/3, height = 11.135/3, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript('compare_bi_MAR_30.eps', width = 15/3, height = 11.135/3, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
data_name = 'MAR_30'
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
data_name = 'MAR_30'
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
data_name = 'MAR_30'
postscript('compare_marginal_MAR_30.eps', width = 15/1.5, height = 11.135/1.5, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript('compare_bi_MAR_30.eps', width = 15/1.5, height = 11.135/1.5, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
postscript('compare_marginal_MAR_30.eps', width = 6.5, height = 4.8, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript('compare_bi_MAR_30.eps', width = 6.5, height = 4.8, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/pmf_comparison_plot.R")
data_name = 'MAR_30'
postscript('compare_marginal_MAR_30.eps', width = 6.5, height = 5.2, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
postscript('compare_bi_MAR_30.eps', width = 6.5, height = 5.2, horizontal = FALSE, onefile = FALSE, paper = 'special')
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
?jpeg
?jpeg
source("../../utils/pmf_comparison_plot.R")
# generate image with high resolution
data_name = 'MAR_30'
jpeg(filename="compare_marginal_MAR_30.jpeg", width=6.5, height=5, units="in", res=300, quality = 100)
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
jpeg(filename="compare_bi_MAR_30.jpeg", width=6.5, height=5, units="in", res=300, quality = 100)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/pmf_comparison_plot.R")
# generate image with high resolution
data_name = 'MAR_30'
jpeg(filename="compare_marginal_MAR_30.jpeg", width=7.5, height=6, units="in", res=300, quality = 100)
pmf_comparison_plot_noGAIN(data_name, n_way = 1)
dev.off()
jpeg(filename="compare_bi_MAR_30.jpeg", width=7.5, height=6, units="in", res=300, quality = 100)
pmf_comparison_plot_noGAIN(data_name, n_way = 2)
dev.off()
source("../../utils/compute_coverage.R")
data_name = 'MAR_30'
n_imputations = 10
source("../../utils/compute_coverage.R")
data_name = 'MAR_30'
n_imputations = 10
source("../../utils/compute_coverage.R")
data_name = 'MAR_30'
n_imputations = 10
n_way = 1
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
df_1way = df
n_way = 2
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
df_2way = df
jpeg(filename="coverage_12way_MAR_30.jpeg", width=7.5, height=6, units="in", res=300, quality = 100)
par(mfrow=c(1,2), oma = c(5.5,4.5,0.2,0.2) + 0.1, mar = c(0.25,0.25,1.25,1.25) + 0.1)
boxplot(df_1way[, c(1,2,3,4,7,8)], col = 'light blue', ylim = c(0,1), main = paste('Marginal'),
las = 2)
boxplot(df_2way[,c(1,2,3,4,7,8)], col = 'peachpuff', ylim = c(0,1), main = paste('Bivariate'),
las = 2, yaxt="n")
axis(2, labels=FALSE)
title(ylab = "Coverage (fraction)",
outer = TRUE, line = 3)
dev.off()
jpeg(filename="coverage_12way_MAR_30.jpeg", width=10, height=6, units="in", res=300, quality = 100)
par(mfrow=c(1,2), oma = c(5.5,4.5,0.2,0.2) + 0.1, mar = c(0.25,0.25,1.25,1.25) + 0.1)
boxplot(df_1way[, c(1,2,3,4,7,8)], col = 'light blue', ylim = c(0,1), main = paste('Marginal'),
las = 2)
boxplot(df_2way[,c(1,2,3,4,7,8)], col = 'peachpuff', ylim = c(0,1), main = paste('Bivariate'),
las = 2, yaxt="n")
axis(2, labels=FALSE)
title(ylab = "Coverage (fraction)",
outer = TRUE, line = 3)
dev.off()
source("../../utils/compute_coverage.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
df_1way = df
source("../../utils/compute_coverage.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
df_1way = df
n_way = 2
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
df_2way = df
source("../../utils/compute_coverage.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
coverage = coverage_models(data_name, n_way, n_imputations)
source("../../utils/compute_coverage.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
df_1way = df
source("../../utils/compute_coverage.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
df_1way = df
n_way = 2
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
df_2way = df
jpeg(filename="coverage_12way_MCAR_30.jpeg", width=10, height=6, units="in", res=300, quality = 100)
par(mfrow=c(1,2), oma = c(5.5,4.5,0.2,0.2) + 0.1, mar = c(0.25,0.25,1.25,1.25) + 0.1)
boxplot(df_1way[, c(1,2,3,4,7,8)], col = 'light blue', ylim = c(0,1), main = paste('Marginal'),
las = 2)
boxplot(df_2way[, c(1,2,3,4,7,8)], col = 'peachpuff', ylim = c(0,1), main = paste('Bivariate'),
las = 2, yaxt="n")
axis(2, labels=FALSE)
title(ylab = "Coverage (fraction)",
outer = TRUE, line = 3)
dev.off()
source("../../utils/compute_bias.R")
data_name = 'MAR_30'
n_imputations = 10
n_way = 1
bias = bias_models(data_name, n_way)
df = format_list(bias)
df_1way = df
jpeg(filename="bias_MAR_30.jpeg", width=10, height=5, units="in", res=300, quality = 100)
# boxplot for estimates for marginal distribution
boxplot(df[, c(1,2,3,4,7,8)], col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias', ylim = c(-0.03, 0.03),
main = 'Bias from different imputation methods: Marginal pmf')
dev.off()
?write.table
?mice
library(mice)
?mice
# DO NOT ALTER CODE IN THIS CHUNK
# The very first time you use this R markdown file, you should install each of the packages below.
# The same goes for other packages you might decide to use
# Remember that you only need to install each R package once in R (ever -- unless you change computers).
# All you need to do whenever you need to use the package again (after restarting the R session),
# is to use the library function to call the package.
# For example, type install.packages("knitr") in the console to install the knitr package.
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(arm)
library(pROC)
library(tidyverse)
library(MASS)
library(tigerstats)
library(leaps)
library(car)
library(rms)
require(caret)
require(e1071)
library(lme4)
library(lattice)
library(broom)
library(boot)
library(ggplot2)
library(cobalt)
require(tidyverse)
require(rstanarm)
require(magrittr)
require(rstan)
require(MCMCpack)
library(abind)
library(matrixStats)
library(truncnorm)
library(mvtnorm)
library(MCMCpack)
library(mnormt)
library(coda)
# sample MCAR dataset from PUMS
source("../../utils/sampleMCAR.R")
n = 10000
missing_col = c(1,3,7,9,10,11)
missing_prob = 0.3
set.seed(0)
output_list <- sampleMCAR(n, missing_prob)
df <- output_list[['df']]
df_observed <- output_list[['df_observed']]
source('../../utils/models/MICE_RF_imputation.R')
start_time <- Sys.time()
imputation_list = MICE_RF_imputation(df_observed, 10)
View(output_list)
# sample MCAR dataset from PUMS
source("../../utils/sampleMCAR.R")
n = 1000
missing_col = c(1,3,7,9,10,11)
missing_prob = 0.3
set.seed(0)
output_list <- sampleMCAR(n, missing_prob)
df <- output_list[['df']]
df_observed <- output_list[['df_observed']]
source('../../utils/models/MICE_RF_imputation.R')
start_time <- Sys.time()
imputation_list = MICE_RF_imputation(df_observed, 5)
# sample MCAR dataset from PUMS
source("../../utils/sampleMCAR.R")
n = 10000
missing_col = c(1,3,7,9,10,11)
missing_prob = 0.3
set.seed(0)
output_list <- sampleMCAR(n, missing_prob)
df <- output_list[['df']]
df_observed <- output_list[['df_observed']]
source('../../utils/models/MICE_RF_imputation.R')
start_time <- Sys.time()
imputation_list = MICE_RF_imputation(df_observed, 2)
end_time <- Sys.time()
end_time - start_time
source("../../utils/create_report.R")
create_report(imputation_list, max_nway=2, missing_col, df_observed)
df1 = imputation_list[[1]]
View(df1)
View(df_observed)
# sample MCAR dataset from PUMS
source("../../utils/sampleMCAR.R")
n = 10000
missing_col = c(1,3,7,9,10,11)
missing_prob = 0.3
set.seed(0)
output_list <- sampleMCAR(n, missing_prob)
df <- output_list[['df']]
df_observed <- output_list[['df_observed']]
imputed_df <-  mice(df_observed,m=n_imputations,method="rf",print=F)
imputed_df <-  mice(df_observed,m=2,method="rf",print=F)
# sample MCAR dataset from PUMS
source("../../utils/sampleMCAR.R")
n = 10000
missing_col = c(1,3,7,9,10,11)
missing_prob = 0.3
set.seed(0)
output_list <- sampleMCAR(n, missing_prob)
df <- output_list[['df']]
df_observed <- output_list[['df_observed']]
imputed_df <-  mice(df_observed,m=2,method="rf")
# sample MCAR dataset from PUMS
source("../../utils/sampleMCAR.R")
n = 10000
missing_col = c(1,3,7,9,10,11)
missing_prob = 0.3
set.seed(0)
output_list <- sampleMCAR(n, missing_prob)
df <- output_list[['df']]
df_observed <- output_list[['df_observed']]
imputed_df <-  mice(df_observed,m=2,method="rf")
imputed_df$loggedEvents
class(complete(imputed_df, 1))
class(complete(imputed_df, 1)[,1])
