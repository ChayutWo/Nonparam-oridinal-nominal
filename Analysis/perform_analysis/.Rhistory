knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
source("../../utils/compute_coverage.R")
data_name = 'MCAR_30'
n_imputations = 10
rm(data_name)
A = 2
b = 3
rm(A, b)
source("../../utils/compute_coverage.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 4
MICE = compute_coverage('MICE', data_name, n_way, n_imputations)
n_way = 4
coverage = coverage_models(data_name, n_way, n_imputations)
source("../../utils/compute_coverage.R")
data_name = 'MCAR_30'
n_imputations = 10
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
n_way = 4
coverage = coverage_models(data_name, n_way, n_imputations)
?read.csv
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(readr)
n_way = 4
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,1),
main = paste('Coverage from different imputation methods: Quadvariate pmf'))
n_way = 1
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,1),
main = paste('Coverage from different imputation methods: Univariate pmf'))
n_way = 2
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,1),
main = paste('Coverage from different imputation methods: Bivariate pmf'))
n_way = 3
coverage = coverage_models(data_name, n_way, n_imputations)
df = format_list(coverage)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,1),
main = paste('Coverage from different imputation methods: Trivariate pmf'))
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(readr)
source("../../utils/compute_rel_MSE.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,1),
main = paste('Coverage from different imputation methods: Univariate pmf'))
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)',
main = paste('Coverage from different imputation methods: Univariate pmf'))
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,20),
main = paste('Coverage from different imputation methods: Univariate pmf'))
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,100),
main = paste('Coverage from different imputation methods: Univariate pmf'))
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,1000),
main = paste('Relative MSE from different imputation methods: Univariate pmf'))
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,500),
main = paste('Relative MSE from different imputation methods: Univariate pmf'))
n_way = 2
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,500),
main = paste('Relative MSE from different imputation methods: Bivariate pmf'))
n_way = 2
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,100),
main = paste('Relative MSE from different imputation methods: Bivariate pmf'))
n_way = 2
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,50),
main = paste('Relative MSE from different imputation methods: Bivariate pmf'))
n_way = 3
rel_MSE = rel_MSE_models(data_name, n_way)
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Coverage (fraction)', ylim = c(0,500),
main = paste('Relative MSE from different imputation methods: Univariate pmf'))
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(readr)
source("../../utils/compute_rel_MSE.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
rel_MSE = rel_MSE_models(data_name, n_way)
df = format_list(rel_MSE)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Relative MSE (fraction)', ylim = c(0,500),
main = paste('Relative MSE from different imputation methods: Univariate pmf'))
c(1,3,7,9,10,11)-1
# DO NOT ALTER CODE IN THIS CHUNK
# The very first time you use this R markdown file, you should install each of the packages below.
# The same goes for other packages you might decide to use
# Remember that you only need to install each R package once in R (ever -- unless you change computers).
# All you need to do whenever you need to use the package again (after restarting the R session),
# is to use the library function to call the package.
# For example, type install.packages("knitr") in the console to install the knitr package.
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(arm)
library(pROC)
library(tidyverse)
library(MASS)
library(tigerstats)
library(leaps)
library(car)
library(rms)
require(caret)
require(e1071)
library(lme4)
library(lattice)
library(broom)
library(boot)
library(ggplot2)
library(cobalt)
require(rstanarm)
require(magrittr)
require(rstan)
require(MCMCpack)
library(abind)
library(matrixStats)
library(truncnorm)
library(mvtnorm)
library(mnormt)
library(coda)
# sample MCAR dataset from PUMS
source("../../utils/sampleMCAR.R")
n = 10000
missing_col = c(1,3,7,9,10,11)
missing_prob = 0.3
set.seed(0)
output_list <- sampleMCAR(n, missing_prob)
df <- output_list[['df']]
df_observed <- output_list[['df_observed']]
# Load imputed dataset
d1 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_1.csv', header = FALSE, sep = ',')
d2 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_2.csv', header = FALSE, sep = ',')
d3 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_3.csv', header = FALSE, sep = ',')
d4 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_4.csv', header = FALSE, sep = ',')
d5 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_5.csv', header = FALSE, sep = ',')
d6 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_6.csv', header = FALSE, sep = ',')
d7 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_7.csv', header = FALSE, sep = ',')
d8 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_8.csv', header = FALSE, sep = ',')
d9 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_9.csv', header = FALSE, sep = ',')
d10 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_10.csv', header = FALSE, sep = ',')
View(d2)
View(df_observed)
# Format imputed dataset into list
imputation_df = list(d1, d2, d3, d4, d5)
imputation_list = list()
levels = c(7,7,7,19,5,4,7,2,17,3,13)
for (i in 1:10) {
# need to plus 1 here because the class index of DP function starts at 0
d = imputation_df[[i]]
colnames(d) = colnames(df_observed)
# format columns of d
for (col_index in 1:ncol(df_observed)) {
d[,col_index] = factor(d[,col_index], levels = 1:levels[col_index], ordered = TRUE)
}
imputation_list[[i]] = d
}
# Format imputed dataset into list
imputation_df = list(d1, d2, d3, d4, d5)
imputation_list = list()
levels = c(7,7,7,19,5,4,7,2,17,3,13)
for (i in 1:5) {
# need to plus 1 here because the class index of DP function starts at 0
d = imputation_df[[i]]
colnames(d) = colnames(df_observed)
# format columns of d
for (col_index in 1:ncol(df_observed)) {
d[,col_index] = factor(d[,col_index], levels = 1:levels[col_index], ordered = TRUE)
}
imputation_list[[i]] = d
}
source("../../utils/create_report.R")
create_report(imputation_list, max_nway=4, missing_col, df_observed)
c(1,3,7,9,10,11)-1
# DO NOT ALTER CODE IN THIS CHUNK
# The very first time you use this R markdown file, you should install each of the packages below.
# The same goes for other packages you might decide to use
# Remember that you only need to install each R package once in R (ever -- unless you change computers).
# All you need to do whenever you need to use the package again (after restarting the R session),
# is to use the library function to call the package.
# For example, type install.packages("knitr") in the console to install the knitr package.
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(arm)
library(pROC)
library(tidyverse)
library(MASS)
library(tigerstats)
library(leaps)
library(car)
library(rms)
require(caret)
require(e1071)
library(lme4)
library(lattice)
library(broom)
library(boot)
library(ggplot2)
library(cobalt)
require(rstanarm)
require(magrittr)
require(rstan)
require(MCMCpack)
library(abind)
library(matrixStats)
library(truncnorm)
library(mvtnorm)
library(mnormt)
library(coda)
# sample MCAR dataset from PUMS
source("../../utils/sampleMCAR.R")
n = 10000
missing_col = c(1,3,7,9,10,11)
missing_prob = 0.3
set.seed(0)
output_list <- sampleMCAR(n, missing_prob)
df <- output_list[['df']]
df_observed <- output_list[['df_observed']]
# Load imputed dataset
d1 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_1.csv', header = FALSE, sep = ',')
d2 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_2.csv', header = FALSE, sep = ',')
d3 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_3.csv', header = FALSE, sep = ',')
d4 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_4.csv', header = FALSE, sep = ',')
d5 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_5.csv', header = FALSE, sep = ',')
d6 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_6.csv', header = FALSE, sep = ',')
d7 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_7.csv', header = FALSE, sep = ',')
d8 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_8.csv', header = FALSE, sep = ',')
d9 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_9.csv', header = FALSE, sep = ',')
d10 = read.csv('../../GAIN/imputed_dataset/MCAR_30/MCAR_30_1_10.csv', header = FALSE, sep = ',')
# Format imputed dataset into list
imputation_df = list(d1, d2, d3, d4, d5)
imputation_list = list()
levels = c(7,7,7,19,5,4,7,2,17,3,13)
for (i in 1:5) {
# need to plus 1 here because the class index of DP function starts at 0
d = imputation_df[[i]]
colnames(d) = colnames(df_observed)
# format columns of d
for (col_index in 1:ncol(df_observed)) {
d[,col_index] = factor(d[,col_index], levels = 1:levels[col_index], ordered = TRUE)
}
imputation_list[[i]] = d
}
source("../../utils/create_report.R")
create_report(imputation_list, max_nway=4, missing_col, df_observed)
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'h', fig.align = 'center')
knitr::opts_chunk$set(fig.cap = "",  fig.path = "Plot")
library(knitr)
library(dplyr)
library(readr)
source("../../utils/compute_bias.R")
data_name = 'MCAR_30'
n_imputations = 10
source("../../utils/compute_bias.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
bias = bias_models(data_name, n_way)
df = format_list(bias)
source("../../utils/compute_bias.R")
data_name = 'MCAR_30'
n_imputations = 10
source("../../utils/compute_bias.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
bias = bias_models(data_name, n_way)
df = format_list(bias)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias',
main = 'Bias from different imputation methods: Univariate pmf')
n_way = 1
bias = bias_models(data_name, n_way)
df = format_list(bias)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias',
main = 'Bias from different imputation methods: Univariate pmf')
source("../../utils/compute_bias.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
bias = bias_models(data_name, n_way)
df = format_list(bias)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias',
main = 'Bias from different imputation methods: Univariate pmf')
source("../../utils/compute_bias.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
bias = bias_models(data_name, n_way)
df = format_list(bias)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias',
main = 'Bias from different imputation methods: Univariate pmf')
levels = c(7,7,7,19,5,4,7,2,17,3,13)
levels[c(1,3,7,9,10,11)]
sum(levels[c(1,3,7,9,10,11)])
n_way = 1
bias = bias_models(data_name, n_way)
source("../../utils/compute_bias.R")
data_name = 'MCAR_30'
n_imputations = 10
n_way = 1
bias = bias_models(data_name, n_way)
df = format_list(bias)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias', ylim = c(-0.1, 0.1),
main = 'Bias from different imputation methods: Univariate pmf')
n_way = 1
bias = bias_models(data_name, n_way)
df = format_list(bias)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias', ylim = c(-0.05, 0.05),
main = 'Bias from different imputation methods: Univariate pmf')
n_way = 2
bias = bias_models(data_name, n_way)
df = format_list(bias)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias', ylim = c(-0.02, 0.02),
main = 'Bias from different imputation methods: Bivariate pmf')
n_way = 2
bias = bias_models(data_name, n_way)
df = format_list(bias)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias', ylim = c(-0.005, 0.005),
main = 'Bias from different imputation methods: Bivariate pmf')
n_way = 2
bias = bias_models(data_name, n_way)
df = format_list(bias)
boxplot(df, col = 'light blue', xlab = 'Imputation method',
ylab = 'Bias', ylim = c(-0.0025, 0.0025),
main = 'Bias from different imputation methods: Bivariate pmf')
